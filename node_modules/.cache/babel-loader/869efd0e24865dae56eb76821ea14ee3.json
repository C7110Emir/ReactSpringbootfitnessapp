{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninja\\\\Fitnessapp\\\\src\\\\components\\\\loginform\\\\signup.js\",\n    _s = $RefreshSig$();\n\nimport style from \"./loginform.module.css\";\nimport { Form } from 'react-bootstrap';\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormData from 'form-data';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm() {\n  _s();\n\n  const [user_name, setUserName] = useState(\"\");\n  const [user_password, setUserPassword] = useState(\"\");\n  const [user_email, setUserEmail] = useState(\"\");\n  const [user_country, setUserCountry] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const handleUserInput = async event => {\n    console.log(inputRef.value);\n    event.preventDefault();\n    const user_info = {\n      user: user_name,\n      password: user_password,\n      email: user_email,\n      country: user_country\n    };\n\n    if (user_name == \"\" || user_password == \"\" || user_country.value == \"\" || user_email == \"\") {\n      alert(\"Please enter your information\");\n      return;\n    }\n\n    if (user_info.email.includes('@') == false || user_info.email.includes('.com') == false) {\n      alert(\"Please enter valid email\");\n      return;\n    }\n\n    console.log(\"Passed\");\n\n    try {\n      const token = await axios.post('http://localhost:8080/api/users/', user_info); //axios.delete('http://localhost:8080/api/users/',user_info);\n\n      console.log(token);\n    } catch (error) {\n      console.log(error.response.data.error);\n    }\n  }; // axios.post('http://localhost:8080/api/users/', user_info);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: style.signuptitle,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: style.text_input,\n        ref: inputRef,\n        id: \"outlined-basic\",\n        onChange: e => setUserName(e.target.value),\n        label: \"User Name\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 176\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 181\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: style.text_input,\n        ref: inputRef,\n        id: \"outlined-basic\",\n        onChange: e => setUserPassword(e.target.value),\n        label: \"Password\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 182\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 187\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: style.text_input,\n        ref: inputRef,\n        id: \"outlined-basic\",\n        onChange: e => setUserEmail(e.target.value),\n        label: \"Email\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 176\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 181\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: style.text_input,\n        ref: inputRef,\n        id: \"outlined-basic\",\n        onChange: e => setUserCountry(e.target.value),\n        label: \"Country\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 179\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 184\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUserInput,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpForm, \"HMqignpCHNnAH/OcXCKu0hvVoZA=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["C:/Users/ninja/Fitnessapp/src/components/loginform/signup.js"],"names":["style","Form","React","useEffect","useState","useRef","axios","withStyles","TextField","Button","FormData","FormControl","SignUpForm","user_name","setUserName","user_password","setUserPassword","user_email","setUserEmail","user_country","setUserCountry","inputRef","handleUserInput","event","console","log","value","preventDefault","user_info","user","password","email","country","alert","includes","token","post","error","response","data","signuptitle","text_input","e","target"],"mappings":"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","sourcesContent":["\r\n\r\nimport style from \"./loginform.module.css\"\r\nimport {Form} from 'react-bootstrap';\r\nimport React, { useEffect, useState , useRef} from \"react\";\r\nimport axios from 'axios';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormData from 'form-data'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nfunction SignUpForm() {\r\n \r\n    const [user_name, setUserName] = useState(\"\");\r\n    const [user_password, setUserPassword] = useState(\"\");\r\n    const [user_email, setUserEmail] = useState(\"\");\r\n    const [user_country, setUserCountry] = useState(\"\");\r\n    const inputRef = useRef(null)\r\n    \r\n      const handleUserInput = async event => {\r\n          console.log(inputRef.value)\r\n       \r\n\r\n           \r\n        event.preventDefault ();\r\n\r\n        const user_info = {\r\n          user: user_name,\r\n          password: user_password,\r\n          email: user_email,\r\n          country: user_country\r\n        };\r\n\r\n        if(user_name == \"\" || user_password == \"\" || user_country.value == \"\" || user_email == \"\"){\r\n            alert(\"Please enter your information\")\r\n            return;\r\n        }\r\n    \r\n         if(user_info.email.includes('@') == false || user_info.email.includes('.com') == false){\r\n            alert(\"Please enter valid email\")\r\n            return;\r\n        }    \r\n        console.log(\"Passed\")\r\n        \r\n        \r\n        try {\r\n            \r\n            const token = await axios.post('http://localhost:8080/api/users/', user_info);\r\n            //axios.delete('http://localhost:8080/api/users/',user_info);\r\n            console.log(token)\r\n          } catch(error){\r\n            console.log(error.response.data.error)\r\n            }\r\n\r\n            \r\n          \r\n      };\r\n        \r\n        \r\n           // axios.post('http://localhost:8080/api/users/', user_info);\r\n        \r\n    \r\n \r\n        \r\n    return (\r\n\r\n        <div >\r\n            \r\n            <Form >\r\n                <h1 className={style.signuptitle}>Register</h1><br/>\r\n                <hr></hr><br/>\r\n                \r\n               <TextField className = {style.text_input} ref={inputRef} id=\"outlined-basic\" onChange={e => setUserName(e.target.value)} label=\"User Name\" variant=\"outlined\" /><br/><br/>\r\n                <TextField className = {style.text_input}  ref={inputRef} id=\"outlined-basic\" onChange={e => setUserPassword(e.target.value)} label=\"Password\" variant=\"outlined\" /> <br/><br/>\r\n                <TextField className = {style.text_input}   ref={inputRef} id=\"outlined-basic\" onChange={e => setUserEmail(e.target.value)} label=\"Email\" variant=\"outlined\" /><br/><br/>\r\n                <TextField className = {style.text_input}  ref={inputRef} id=\"outlined-basic\" onChange={e => setUserCountry(e.target.value)} label=\"Country\" variant=\"outlined\" /><br/><br/>\r\n                \r\n                <Button onClick={handleUserInput} >Register</Button>\r\n                \r\n            </Form>\r\n    \r\n        \r\n            \r\n\r\n             {/*\r\n                     <div className={style.SignUpdiv}>\r\n            <form action=\"\" className={style.signupform} onSubmit={handleUserInput}>\r\n                <h1 className={style.signuptitle}>Sign Up</h1><br/>\r\n                <hr></hr><br/>\r\n                <label for=\"signupusername\" className={style.signupusername} className={style.text}>Username:</label><br/><br/>\r\n                <input type=\"username\" id=\"signupusername\" onChange={e => setUserName(e.target.value)} className={style.signupusernameinput} className={style.input} placeholder=\"Username\"/><br/><br/>\r\n                <label for=\"signuppassword\" className={style.signuppassword} className={style.text}>Password:</label><br/><br/>\r\n                <input type=\"password\" id=\"signuppassword\" onChange={e => setUserPassword(e.target.value)} className={style.signuppasswordinput} className={style.input} placeholder=\"Password\" maxLength=\"6\"/><br/><br/>\r\n                <label for=\"reenterpass\" className={style.reenterpassword} className={style.text}>Re-enter Password:</label><br/><br/>\r\n                <input id=\"reenterpass\" type=\"password\" onChange={e => setUserEmail(e.target.value)} className={style.reenterpasswordinput} className={style.input} placeholder=\"Re-enter Password\"/><br/><br/>\r\n                <label for=\"signupemail\" className={style.signupemail} className={style.text}>Email:</label><br/><br/>\r\n                <input type=\"email\" id=\"signupemail\"  onChange={e => setUserEmail(e.target.value)}className={style.signupemailinput} className={style.input} placeholder=\"example@example.com\"/><br/><br/>\r\n                <label for=\"signupcountry\" className={style.signupcountry} className={style.text}>Country:</label><br/><br/>\r\n                <input type=\"country\" id=\"signupcountry\"  onChange={e => setUserCountry(e.target.value)} className={style.signupcountryinput} className={style.input} placeholder=\"Country\"/><br/><br/>\r\n                <button type=\"submit\" className={style.Signupbutton} >Sign Up</button>\r\n            </form>\r\n        </div>\r\n            \r\n   \r\n       <Form lassName={style.signupform} onSubmit={handleUserInput}>\r\n        <h1 className={style.signuptitle}>Sign Up</h1><br/>\r\n        <hr></hr><br/>\r\n        <TextField className = {style.text_input} id=\"outlined-basic\" onChange={handleChange}  name=\"user_name\" label=\"User Name\" variant=\"outlined\" /><br/><br/>\r\n        <Form.Label className={style.signupusername} className={style.text}>Username:</Form.Label><br/><br/>\r\n        <Form.Control\r\n            className={style.signupusernameinput} className={style.input} \r\n            type=\"text\"\r\n            name=\"user_name\"\r\n            placeholder=\"Username\"\r\n            onChange={handleChange}\r\n        />  \r\n        <br/><br/>\r\n        <Form.Label className= {style.signuppassword} className={style.text}>Password:</Form.Label><br/><br/>\r\n        <Form.Control\r\n            className= {style.signuppasswordinput} className={style.input} \r\n            maxLength=\"6\"\r\n            type=\"password\" \r\n            name=\"user_password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n        />\r\n        <br/><br/>\r\n        <Form.Label className={style.reenterpassword} className={style.text}>Re-enter Password:</Form.Label><br/><br/>\r\n        <Form.Control\r\n            className= {style.reenterpasswordinput} className={style.input}\r\n            maxLength=\"6\"\r\n            type=\"password\" \r\n            name=\"user_password\"\r\n            placeholder=\"Re-enter Password\"\r\n            onChange={handleChange}\r\n        />\r\n        <br/><br/>\r\n        <Form.Label className={style.signupemail} className={style.text}>Email:</Form.Label><br/><br/>\r\n        <Form.Control\r\n            className= {style.signupemailinput} className={style.input} \r\n            maxLength=\"6\"\r\n            type=\"email\" \r\n            name=\"user_email\"\r\n            placeholder=\"example@example.com\"\r\n            onChange={handleChange}\r\n        />\r\n        <br/><br/>\r\n        <Form.Label className={style.signupcountry} className={style.text}>Country:</Form.Label><br/><br/>\r\n        <Form.Control\r\n            className= {style.signupcountryinput} className={style.input}\r\n            maxLength=\"6\"\r\n            type=\"country\" \r\n            name=\"user_country\"\r\n            placeholder=\"Country\"\r\n            onChange={handleChange}\r\n        />\r\n        <br/><br/>\r\n        <div>\r\n              <Button className=\"button\" variant=\"primary\" type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </div>\r\n        </Form>\r\n\r\n   */}\r\n\r\n        {/*\r\n        <div className={style.SignUpdiv}>\r\n            <form action=\"\" className={style.signupform} onSubmit={submitButton}>\r\n                <h1 className={style.signuptitle}>Sign Up</h1><br/>\r\n                <hr></hr><br/>\r\n                <label for=\"signupusername\" className={style.signupusername} className={style.text}>Username:</label><br/><br/>\r\n                <input type=\"username\" id=\"signupusername\" className={style.signupusernameinput} className={style.input} placeholder=\"Username\"/><br/><br/>\r\n                <label for=\"signuppassword\" className={style.signuppassword} className={style.text}>Password:</label><br/><br/>\r\n                <input type=\"password\" id=\"signuppassword\" className={style.signuppasswordinput} className={style.input} placeholder=\"Password\" maxLength=\"6\"/><br/><br/>\r\n                <label for=\"reenterpass\" className={style.reenterpassword} className={style.text}>Re-enter Password:</label><br/><br/>\r\n                <input id=\"reenterpass\" type=\"password\" className={style.reenterpasswordinput} className={style.input} placeholder=\"Re-enter Password\"/><br/><br/>\r\n                <label for=\"signupemail\" className={style.signupemail} className={style.text}>Email:</label><br/><br/>\r\n                <input type=\"email\" id=\"signupemail\" className={style.signupemailinput} className={style.input} placeholder=\"example@example.com\"/><br/><br/>\r\n                <label for=\"signupcountry\" className={style.signupcountry} className={style.text}>Country:</label><br/><br/>\r\n                <input type=\"country\" id=\"signupcountry\" className={style.signupcountryinput} className={style.input} placeholder=\"Country\"/><br/><br/>\r\n                <button type=\"submit\" className={style.Signupbutton} >Sign Up</button>\r\n            </form>\r\n        </div>\r\n              </div>\r\n        \r\n*/}\r\n       </div>\r\n    )\r\n}\r\n export default SignUpForm;"]},"metadata":{},"sourceType":"module"}