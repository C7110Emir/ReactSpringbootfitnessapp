{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninja\\\\Fitnessapp\\\\src\\\\components\\\\loginform\\\\loginform.js\",\n    _s = $RefreshSig$();\n\nimport style from \"./loginform.module.css\";\nimport \"./style.css\";\nimport { Form } from 'react-bootstrap';\nimport React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Loginform() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [user_name, setUserName] = useState(\"\");\n  const [user_password, setUserPassword] = useState(\"\");\n  useEffect(() => {\n    getData();\n  }, [user_password]);\n\n  const getData = () => {\n    axios.get(\"http://localhost:8080/api/users/\").then(res => {\n      setData(res.data);\n    });\n  };\n\n  const handleUserInput = async event => {\n    event.preventDefault();\n    console.log(data);\n    const mapresponse = [];\n    data.map(element => {\n      if (element.userName == user_name && element.password == user_password) {\n        mapresponse.push(true);\n      } else if (element.userName != user_name || element.password != user_password) {\n        mapresponse.push(false);\n      }\n    });\n    console.log(mapresponse);\n\n    if (!mapresponse.includes(true)) {\n      alert(\"Your username or password doesn't exist, Please try again\");\n      setUserPassword(\"\");\n    } else if (mapresponse.includes(true)) {\n      alert(\"Logged in successfully\");\n      setUserName(\"\");\n      setUserPassword(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.outerDiv,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.logindiv,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: style.logintitle,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: style.text_input,\n          id: \"outlined-basic\",\n          value: user_name,\n          onChange: e => setUserName(e.target.value),\n          label: \"User Name\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 184\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 189\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: style.text_input,\n          id: \"outlined-password-input\",\n          value: user_password,\n          onChange: e => setUserPassword(e.target.value),\n          label: \"Password\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 201\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 206\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-password-input\",\n          label: \"Password\",\n          type: \"password\",\n          autoComplete: \"current-password\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUserInput,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Loginform, \"hwfj2zDDF6fLfpOEPKP8uk5en5c=\");\n\n_c = Loginform;\nexport default Loginform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"sources":["C:/Users/ninja/Fitnessapp/src/components/loginform/loginform.js"],"names":["style","Form","React","useEffect","useState","TextField","Button","axios","Loginform","data","setData","user_name","setUserName","user_password","setUserPassword","getData","get","then","res","handleUserInput","event","preventDefault","console","log","mapresponse","map","element","userName","password","push","includes","alert","outerDiv","logindiv","logintitle","text_input","e","target","value"],"mappings":"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","sourcesContent":["import style from \"./loginform.module.css\"\r\nimport \"./style.css\"\r\nimport {Form} from 'react-bootstrap';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nfunction Loginform() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [user_name, setUserName] = useState(\"\");\r\n    const [user_password, setUserPassword] = useState(\"\");\r\n    \r\n      \r\n     useEffect(() => {\r\n       getData()\r\n     },[user_password]);\r\n\r\n      const getData = () =>{\r\n        axios.get(\"http://localhost:8080/api/users/\").then((res) => {\r\n            setData(res.data);\r\n        });\r\n        \r\n      }\r\n\r\n    const handleUserInput = async event => {\r\n\r\n      event.preventDefault ();\r\n        \r\n      console.log(data)\r\n      const mapresponse = []\r\n      data.map((element)=>{\r\n        if(element.userName == user_name && element.password == user_password){\r\n          mapresponse.push(true)\r\n        }\r\n        else if(element.userName != user_name || element.password != user_password){\r\n          mapresponse.push(false)\r\n        }\r\n      })\r\n      console.log(mapresponse);\r\n      if(!(mapresponse.includes(true))){\r\n        alert(\"Your username or password doesn't exist, Please try again\") \r\n        setUserPassword(\"\")\r\n      }\r\n      else if(mapresponse.includes(true)){\r\n        alert(\"Logged in successfully\")\r\n        setUserName(\"\")\r\n        setUserPassword(\"\")\r\n      }\r\n\r\n    }\r\n    return (\r\n        <div className={style.outerDiv}>\r\n            <div className={style.logindiv}>\r\n           \r\n            <Form >\r\n                 <h1 className={style.logintitle}>Log In</h1><br/>\r\n                   \r\n                    <hr/><br/><br/>\r\n                    \r\n                    <TextField className = {style.text_input} id=\"outlined-basic\" value={user_name} onChange={e => setUserName(e.target.value)} label=\"User Name\" variant=\"outlined\" /><br/><br/>\r\n                    <TextField className = {style.text_input} id=\"outlined-password-input\" value={user_password} onChange={e => setUserPassword(e.target.value)} label=\"Password\" variant=\"outlined\" /> <br/><br/>\r\n                    <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n        />\r\n                    <Button onClick={handleUserInput} >Log In</Button>\r\n                   {/*\r\n                    <label for=\"loginpassword\"  className={style.loginpassword} className={style.text}>Password:</label><br/><br/>\r\n                    <input type=\"password\" id=\"loginpassword\" className={style.loginpassword} className={style.logininput}  maxLength=\"6\" placeholder=\"Password\"/><br/><br/><br/>\r\n                    <p className={style.loginnoaccount} id={style.youdonthaveanaccount}>You don't have an account?</p><br/><br/>\r\n                    \r\n                   */}\r\n                    \r\n                    </Form> \r\n                         \r\n                \r\n                \r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loginform;"]},"metadata":{},"sourceType":"module"}